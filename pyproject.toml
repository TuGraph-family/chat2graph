[tool.poetry]
name = "chat2graph"
version = "0.0.1"
description = "An Agentic System on Graph Database."
authors = ["Florian Fan <fanzhidongyzby@163.com>"]
packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
openai = "^1.54.3"
anthropic = "0.40.0"
pydantic = "^2.9.2"
typing-inspect = ">=0.8.0"
pytest-asyncio = "^0.24.0"
httpx = ">=0.27.0,<0.28.0"
neo4j = "^5.27.0"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "*"
ruff = "*"
mypy = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"


[tool.poetry.group.db-gpt.dependencies]
dbgpt = { version = "0.6.3", extras = ["framework", "rag"] }
typing-inspect = ">=0.8.0"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle error
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "EXE",
]
ignore = [
    "UP006",    # use List not list
    "UP035",
    "UP007",
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
addopts = "-v"
asyncio_mode = "auto"  # Enable asyncio mode
markers = [
    "asyncio: mark test as async"
]