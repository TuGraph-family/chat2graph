# This is a YAML file for configuring a multi-agent system designed for GAIA benchmark tasks.
# VERSION 2.1 - All PDF processing is now consolidated into the MultiModalTool.
# It defines the application, a comprehensive set of tools, modular actions,
# workflow-oriented operators, and a team of collaborating experts.

# 1. Application Basic Information
app:
  name: "GAIA-Agents-v2.1"
  desc: "A versatile multi-agent system where all PDF processing is handled by the MultiModalExpert."
  version: "0.2.1"

# 2. Plugin and Reasoner Configuration
plugin:
  workflow_platform: "DBGPT"
reasoner:
  type: "DUAL" # Using DUAL reasoner for complex problem-solving and planning.

# 3. Tools Definition
tools:
  - &browser_tool
    name: "BrowserTool"
    type: "MCP"
    desc: "A tool for browsing the web, reading page content, and interacting with web elements."
    mcp_transport_config:
      transport_type: "STDIO"
      command: "npx"
      args: ["@playwright/mcp@latest", "--isolated"]

  - &file_tool
    name: "FileSystemTool"
    type: "MCP"
    desc: "A tool for basic file operations like reading, writing, and listing files in the local filesystem."
    mcp_transport_config:
      transport_type: "STDIO"
      command: "npx"
      args: ["@modelcontextprotocol/server-filesystem", "."]

  - &code_executor_tool
    name: "CodeExecutorTool"
    type: "LOCAL_TOOL"
    desc: "Executes Python code snippets in a sandboxed environment. Ideal for math, data processing, and using specialized libraries."
    module_path: "gaia_env.tool.code_executor"
  
  - &shell_executor_tool
    name: "ShellExecutorTool"
    type: "LOCAL_TOOL"
    desc: "Executes shell commands. Primarily used for installing Python packages with 'pip install'."
    module_path: "gaia_env.tool.shell_executor"

  - &arxiv_tool
    name: "ArxivTool"
    type: "MCP"
    desc: "A specialized tool for searching and retrieving papers from the arXiv academic repository."
    mcp_transport_config:
      transport_type: "STDIO"
      command: "uv"
      args: ["tool", "run", "arxiv-mcp-server", "--storage-path", "."]
  
  - &spreadsheet_tool
    name: "SpreadsheetTool"
    type: "LOCAL_TOOL"
    desc: "A tool for interacting with spreadsheet files (XLSX, CSV). Can read specific cells, rows, columns, or entire sheets."
    module_path: "gaia_env.tool.spreadsheet_tool"

  - &zip_tool
    name: "ZipTool"
    type: "LOCAL_TOOL"
    desc: "A tool for handling .zip archives. Can list the contents or extract files."
    module_path: "gaia_env.tool.zip_tool"

  - &multi_modal_tool
    name: "MultiModalTool"
    type: "LOCAL_TOOL"
    desc: "An advanced tool for processing complex content. Use this for analyzing images, audio, and ALL PDF documents (for both text extraction and visual understanding)."
    module_path: "app.plugin.multi_modal.multi_modal_tool"

# 4. Action Definitions (PDF-specific action removed)
actions:
  - &web_research_action
    name: "web research action"
    desc: "Uses the browser tool to search for information. (Please do not easily trust the 'AI Overview' section of search results.)"
    tools: 
      - *browser_tool
  - &file_operation_action
    name: "file operation action"
    desc: "Performs basic file system operations like reading or writing."
    tools:
      - *file_tool
  - &write_python_code_action
    name: "write python code action"
    desc: "Writes a Python code snippet to solve a problem."
    tools: []
  - &execute_python_code_action
    name: "execute python code action"
    desc: "Executes a given Python code snippet."
    tools: 
      - *code_executor_tool
  - &execute_shell_command_action
    name: "execute shell command action"
    desc: "Executes a shell command."
    tools: 
      - *shell_executor_tool
  - &arxiv_search_action
    name: "arxiv search action"
    desc: "Searches for relevant papers on arXiv."
    tools: 
      - *arxiv_tool
  - &process_spreadsheet_action
    name: "process spreadsheet action"
    desc: "Reads and extracts data from a spreadsheet file."
    tools: 
      - *spreadsheet_tool
  - &handle_zip_file_action
    name: "handle zip file action"
    desc: "Lists content of or extracts files from a .zip archive."
    tools: 
      - *zip_tool
  - &analyze_multimodal_content_action
    name: "analyze multimodal content action"
    desc: "Processes images, audio files, or PDF documents to extract information (OCR, STT, object recognition, text extraction)."
    tools: 
      - *multi_modal_tool
  - &synthesis_action
    name: "synthesize results"
    desc: "Integrates information from all previous steps into a final answer."
    tools: []

  - &job_decomposition_action
    - name: "job decomposition action"
      desc: "Decomposes the goal and assigns tasks to experts, and the final expert is the synthesis expert."
x
# Toolkits updated to reflect the new tool structure
toolkit:
  - [*web_research_action, *file_operation_action, *arxiv_search_action, *process_spreadsheet_action, *handle_zip_file_action]
  - [*write_python_code_action, *execute_python_code_action, *execute_shell_command_action, *analyze_multimodal_content_action]
  - [*synthesis_action]

# 5. Operator Definitions (Instructions updated for new PDF workflow)
operators:
  - &data_gathering_operator
    instruction: |
      You are an information gathering specialist for text-based and structured data.
      Acquire data from web sources (Browser), simple files (FileSystem), spreadsheets (SpreadsheetTool), archives (ZipTool), and academic papers (Arxiv).
      IMPORTANT: You DO NOT process PDF files. If a task involves a PDF, it must be handled by the MultiModalAnalysisExpert.
      Aggregate all findings into a structured summary.
    output_schema: |
      data_summary: A structured summary of all information found.
      sources_used: A list of all files read and URLs visited.
    actions:
      - *web_research_action
      - *file_operation_action
      - *arxiv_search_action
      - *process_spreadsheet_action
      - *handle_zip_file_action

  - &computational_operator
    instruction: |
      You are a computational specialist. Your task is to perform calculations or data manipulation.
      1. If needed, use the ShellExecutor to run 'pip install <package_name>'.
      2. Write and execute Python code to perform the task.
    output_schema: |
      computation_result: The final output from the code execution.
      code_snippet: The Python code that was executed.
    actions:
      - *write_python_code_action
      - *execute_python_code_action
      - *execute_shell_command_action

  - &multimodal_analysis_operator
    instruction: |
      You are a multi-modal analysis specialist. Your role is to analyze and interpret complex media files.
      Use your tool to process images (for OCR or content), audio files (for transcription), and ALL PDF documents.
      For PDFs, extract all relevant text and describe any important visual elements (like charts or tables).
    output_schema: |
      analysis_summary: A comprehensive summary of the findings from the media content, including all text extracted from PDFs.
    actions:
      - *analyze_multimodal_content_action

  - &synthesis_operator
    instruction: |
      You are the final answer specialist. Review the structured information from all other experts (DataGathering, Computational, MultiModal).
      Synthesize these pieces of information into a single, clear, and complete final answer.
    output_schema: |
      - Return only your answer, which should be a number, or a short phrase with as few words as possible, or a comma separated list of numbers and/or strings.
      - If the answer is a number, return only the number without any units unless specified otherwise.
      - If the answer is a string, don't include articles, and don't use abbreviations (e.g. for states).
      - If the answer is a comma separated list, apply the above rules to each element in the list.
    actions:
      - *synthesis_action

# 6. Expert Definitions
experts:
  - profile:
      name: "DataGatheringExpert"
      desc: "A specialist in acquiring information from text-based and structured sources like the web, text files, spreadsheets, and ZIP archives. Does not handle PDFs, images, or audio."
    reasoner:
      actor_name: "DataGathererActor"
      thinker_name: "DataGathererThinker"
    workflow:
      - [*data_gathering_operator]

  - profile:
      name: "ComputationalExpert"
      desc: "A specialist in programming and calculation. Writes and executes Python code, and manages its own dependencies."
    reasoner:
      actor_name: "ComputationalActor"
      thinker_name: "ComputationalThinker"
    workflow:
      - [*computational_operator]

  - profile:
      name: "MultiModalAnalysisExpert"
      desc: "A specialist for complex media. It analyzes images (OCR, content), transcribes audio, and is responsible for processing ALL PDF documents."
    reasoner:
      actor_name: "MultiModalActor"
      thinker_name: "MultiModalThinker"
    workflow:
      - [*multimodal_analysis_operator]

  - profile:
      name: "SynthesisAndAnswerExpert"
      desc: "The final expert. It takes the structured outputs from all other experts, synthesizes them, and formulates the definitive final answer. The assigned subtask should be the original task, and the final answer of this expert would be output the whole system."
    reasoner:
      actor_name: "SynthesizerActor"
      thinker_name: "SynthesizerThinker"
    workflow: 
      - [*synthesis_operator]


# 7. Leader Configuration
leader:
  profile:
    name: "GAIA-Orchestrator"
    desc: "Orchestrates the agent team. Uses the ProblemAnalyzerExpert to create a plan, then delegates sub-tasks to the appropriate experts to solve the problem."
  actions:
    - *job_decomposition_action

# 8. KnowledgeBase, Memory, and Environment
knowledgebase: {}
memory: {}
env: {}
